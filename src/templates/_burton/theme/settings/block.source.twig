{## Block Content Sources - Meta Field Config
{----------------------------------------------------------------------------#}
{%- set type  = element.type.handle  ?? null -%}
{%- set field = element.field.handle ?? null -%}



{## Common Meta Fields
{----------------------------------------------------------------------------#}
{%- set common = {
    limit: {
        label: "Limit",
        help: "Set to 0 for no limit",
        number : { min: 0, max: 100, step: 1 }
    },

    topicFilter: {
        label: "Topic Filter",
        help: "Allow filtering by Topic",
        type: 'multiselect',
        options: [
            { optgroup: "Topics", label: "Topics", value: "optGroupTopics" },
            ...(craft.entries.type('topic').orderBy('title ASC').all() | map(entry => { value: entry.id, label: entry.title })),
            { optgroup: "Tags", label: "Tags", value: "optGroupTags" },
            ...(craft.entries.type('tag').orderBy('title ASC').all() | map(entry => { value: entry.id, label: entry.title })),
        ]
    },

    sort: {
        label: "Sort Order",
        help: "How to sort the entries.",
        select: {
            default: { "label": "Default" },
            title:   { "label": "Alphabetical", "orderBy": "title ASC" },
            oldest:  { "label": "Oldest to Newest", "orderBy": "postDate ASC" },
            recent:  { "label": "Newest to Oldest", "orderBy": "postDate DESC" },
            popular: { "label": "Popularity", "orderBy": "RAND()" },
            random:  { "label": "Random", "orderBy": "RAND()" }
        }
    },

    sortOverride: {
        label: "Override Sort Order?",
        help: "How to sort the entries.",
        select: {
            default: { "label": "Accept default sort order" },
            title:   { "label": "Alphabetical", "orderBy": "title ASC" },
            oldest:  { "label": "Oldest to Newest", "orderBy": "postDate ASC" },
            recent:  { "label": "Newest to Oldest", "orderBy": "postDate DESC" },
            popular: { "label": "Popularity", "orderBy": "RAND()" },
            random:  { "label": "Random", "orderBy": "RAND()" }
        }
    },
} -%}


{## Prepare Configuration Options
{----------------------------------------------------------------------------#}
{%- from "_burton/base/partial" import unpackNestedOptions -%}
{{- unpackNestedOptions( {
    bits:      _self.bits( common )      | json_decode,
    component: _self.component( common ) | json_decode,
    deck:      _self.deck( common )      | json_decode,
    fragment:  _self.fragment( common )  | json_decode,
    image:     _self.image( common )     | json_decode,
    media:     _self.media( common )     | json_decode,
    text:      _self.text( common )      | json_decode
}, type ) | raw -}}


{## Individual Config Options By Block Type
{----------------------------------------------------------------------------#}
{%- macro bits( common ) -%}
    {%- set config = {
        embed: {
            label: "Create New Bits",
            help: "Bits will only exist within this block",
            settings: {
                sort: common.sort,
                limit: common.limit
            }
        },
        collection: {
            label: "Use Bits from a Collection",
            help: "Use a Collection to display a set of bits",
            settings: {
                sort: common.sortOverride,
                limit: common.limit,
                topicFilter: common.topicFilter,
            }
        },
    } -%}

    {{- config | json_encode -}}
{%- endmacro -%}


{%- macro component( common ) -%}
    {%- set config = {
        select: {
            label: "System Component",
            help: "",
            settings: {

            }
        },
        asset: {
            label: "Digital Asset",
            help: "",
            settings: {

            }
        },
        embed: {
            label: "External Embed",
            help: "",
            settings: {

            }
        },
    } -%}

    {{- config | json_encode -}}
{%- endmacro -%}


{%- macro deck( common ) -%}
    {%- set config = {
        select: {
            label: "Manual Selection",
            help: "Select a set of entries to display",
            settings: {
                sort: common.sort,
                limit: common.limit,
                topicFilter: common.topicFilter,
            }
        },
        collection: {
            label: "Load from Collection",
            help: "Use a Collection to display a set of entries",
            settings: {
                sort: common.sortOverride,
                limit: common.limit,
                topicFilter: common.topicFilter,
            }
        },
        embed: {
            label: "Create Local Deck",
            help: "Standalone pages with custom URLs",
            settings: {
                sort: common.sort,
                limit: common.limit
            }
        },
    } -%}

    {{- config | json_encode -}}
{%- endmacro -%}


{%- macro fragment( common ) -%}
    {%- set config = {
        select: {
            label: "Reusable Element",
            help: "",
            settings: {

            }
        },
        embed: {
            label: "Nested Blocks",
            help: "",
            settings: {

            }
        },
    } -%}

    {{- config | json_encode -}}
{%- endmacro -%}


{%- macro image( common ) -%}
    {%- set config = {
        select: {
            label: "Local Image Asset",
            help: "Select a set of images to display",
            settings: {

            }
        },
        collection: {
            label: "Load from Collection",
            help: "Use a Collection to display a set of images",
            settings: {
                sort: common.sortOverride,
                limit: common.limit,
            }
        },
    } -%}

    {{- config | json_encode -}}
{%- endmacro -%}


{%- macro media( common ) -%}
    {%- set config = {
        select: {
            label: "Local Media Asset",
            help: "Select (or upload) media files to display",
            settings: {

            }
        },
        embed: {
            label: "External Embeds",
            help: "Select a set of media files to display",
            settings: {

            }
        },
        collection: {
            label: "Load from Collection",
            help: "Use a Collection to display a set of media assets",
            settings: {
                sort: common.sortOverride,
                limit: common.limit,
            }
        },
    } -%}

    {{- config | json_encode -}}
{%- endmacro -%}


{%- macro text( common ) -%}
    {%- set config = {
        embed: {
            label: "Text Editor",
            help: "",
            settings: {

            }
        },

        asset: {
            label: "Parsed Document",
            help: "",
            settings: {

            }
        },
    } -%}

    {{- config | json_encode -}}
{%- endmacro -%}