{## [Core] Account Elements
{-------------------------------------------------------------------------------------##}
{%- macro login( params ) -%}
    {%- set redirect = params.redirect ??? siteUrl('account') -%}
    <form method="post" action="" accept-charset="UTF-8" class="flex flex-col gap-8">
        {{ csrfInput() }}
        {{ actionInput('users/login') }}
        {{ redirectInput(redirect) }}

        <div class="field flex flex-col gap-1">
            <label for="loginName">{{- 'Email / Username'|t -}}</label>
            {{ input('text', 'loginName', craft.app.user.getRememberedUsername(), {
                id: 'loginName',
                placeholder: 'email@site.com',
                required: true,
            }) }}
        </div>

        <div class="field flex flex-col gap-1">
            <label for="loginPassword">{{- 'Password'|t -}}</label>
            {{ input('password', 'password', null, { id: 'loginPassword', }) }}
        </div>

        <div class="field flex flex-col gap-1">
            <label>
                {{ input('checkbox', 'rememberMe', 1, { id: 'rememberMe', checked: true }) }}
                {{ 'Remember me'|t }}
            </label>
        </div>

        <p class="data-only-links">
            {{ tag('button', { type: 'submit', class: 'button', text: 'Sign in âžœ'|t }) }}
            <a href="{{ siteUrl('account/forgot') }}">{{- 'Forgot your password?'|t -}}</a>
        </p>
    </form>
{%- endmacro -%}

{%- macro forgot( params ) -%}
    <form method="post" action="" accept-charset="UTF-8" class="flex flex-col gap-8">
        {{ csrfInput() }}
        {{ actionInput('users/send-password-reset-email') }}
        {{ redirectInput('account') }}
        {{ successMessageInput('Password reset email sent!') }}

        <div class="field flex flex-col gap-1">
            <label for="loginName">{{- 'Email Address'|t -}}</label>
            {{ input('text', 'loginName', loginName ?? craft.app.user.rememberedUsername, {
                id: 'loginName'
            }) }}
        </div>

        {% if errors is defined %}
            {{ ul(errors, {
                itemOptions: {
                    class: 'text-red'
                }
            }) }}
        {% endif %}

        <p class="data-only-links">
            {{ tag('button', { type: 'submit', class: "button" , text: 'Reset Password'|t }) }}
            <a href="{{ url('account') }}">{{- 'Cancel'|t -}}</a>
        </p>
    </form>
{%- endmacro -%}



{%- macro register( params ) -%}
    <form method="post" action="" accept-charset="UTF-8" class="flex flex-col gap-8">

    </form>
{%- endmacro -%}


{%- macro signup_email() -%}
    {%- set cart = craft.commerce.carts.cart ??? null %}
    {{ _self.textField({
        name : "email",
        type : 'email',
        label: "Email",
        value: craft.commerce.carts.cart.email
                ??? craft.app.user.identity.email
                ??? craft.app.user.getRememberedUsername()
                ??? null,
        required: true,
        placeholder: "first.last@email.com",
    }) }}
{%- endmacro -%}


{%- macro signup_fields() -%}
    {%- set cart = craft.commerce.carts.cart ??? null %}

    {{ _self.textField({
        name : "billingAddress[fullName]",
        label: "Full Name",
        value: cart.billingAddress.fullName ??? null,
        required: true,
    }) }}

    {{ _self.signup_email() }}

    {{ _self.textField({
        name : "billingAddress[organization]",
        label: "Organization",
        value: cart.billingAddress.organization ??? null,
    }) }}

    {{ _self.textField({
        name : "billingAddress[addressLine1]",
        label: "Address",
        value: cart.billingAddress.addressLine1 ??? null,
        required: true,
    }) }}

    {{ _self.textField({
        name : "billingAddress[addressLine2]",
        label: "Unit / Office #",
        value: cart.billingAddress.addressLine2 ??? null,
    }) }}

    {{ _self.textField({
        name : "billingAddress[locality]",
        label: "City",
        value: cart.billingAddress.locality ??? null,
        required: true,
    }) }}

    {{ _self.regionField({
        name : "billingAddress[administrativeArea]",
        label: "Province",
        value: cart.billingAddress.administrativeArea ??? null,
        required: true,
    }) }}

    {{ _self.textField({
        name : "billingAddress[postalCode]",
        label: "Postal Code",
        value: cart.billingAddress.postalCode ??? null,
        required: true,
    }) }}
{%- endmacro -%}


{%- macro payment_methods( settings ) -%}
    <div x-data="{
        selectSource(event) {
            const label = event.currentTarget;
            label.querySelector('input').checked = true;
            document.querySelectorAll('[name=gatewayId]')
                .forEach(source => source.checked = false);
        },

        selectGateway(event) {
            const label = event.currentTarget;
            label.querySelector('input').checked = true;
            document.querySelectorAll('[name=paymentSourceId]')
                .forEach(source => source.checked = false);
        }
    }">
        {{ _self.method_sources() }}
        {{ _self.method_gateways() }}
    </div>
{%- endmacro -%}


{%- macro method_sources( sources, selected ) -%}
    {%- set sources = craft.commerce.paymentSources.getAllPaymentSourcesByCustomerId(currentUser.id ?? null) ??? [] %}
    {% for source in collect(sources).where('gateway.handle', 'stripe').all() -%}
        {{ _self.mcui( 'radio', {
            name        : 'sourceId',
            value       : source.id,
            label       : source.description,
            checked     : ( source.id == craft.commerce.carts.cart.paymentSourceId ??? null ),
            activate    : "selectSource($event)",
        }) }}
    {% endfor %}
{%- endmacro -%}


{%- macro method_gateways() -%}
    {% for gateway in craft.commerce.gateways.allCustomerEnabledGateways ??? [] %}
        {{ _self.mcui( 'radio', {
            name        : 'gatewayId',
            value       : gateway.id,
            label       : gateway.name ??? gateway.handle,
            checked     : ( gateway.id == craft.commerce.carts.cart.gatewayId ??? null ),
            activate    : "selectGateway($event)",
            instructions: _self.gateway_instructions( gateway )
        }) }}
    {% endfor %}
{%- endmacro -%}


{%- macro gateway_instructions( gateway ) -%}
    {% if gateway.handle == 'stripe' %}
        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit extrahenda radicitus</p>

        <ul class="m-0 p-0 list-none flex gap-3">
            <li><svg viewBox="0 0 38 24" xmlns="http://www.w3.org/2000/svg" role="img" class="h-7 w-auto inline-block" aria-labelledby="pi-master" class="payment-icon"><title id="pi-master">Mastercard</title><path opacity=".07" d="M35 0H3C1.3 0 0 1.3 0 3v18c0 1.7 1.4 3 3 3h32c1.7 0 3-1.3 3-3V3c0-1.7-1.4-3-3-3z"></path><path fill="#fff" d="M35 1c1.1 0 2 .9 2 2v18c0 1.1-.9 2-2 2H3c-1.1 0-2-.9-2-2V3c0-1.1.9-2 2-2h32"></path><circle fill="#EB001B" cx="15" cy="12" r="7"></circle><circle fill="#F79E1B" cx="23" cy="12" r="7"></circle><path fill="#FF5F00" d="M22 12c0-2.4-1.2-4.5-3-5.7-1.8 1.3-3 3.4-3 5.7s1.2 4.5 3 5.7c1.8-1.2 3-3.3 3-5.7z"></path></svg></li>
            <li><svg viewBox="0 0 38 24" xmlns="http://www.w3.org/2000/svg" role="img" class="h-7 w-auto inline-block" aria-labelledby="pi-visa" class="payment-icon"><title id="pi-visa">Visa</title><path opacity=".07" d="M35 0H3C1.3 0 0 1.3 0 3v18c0 1.7 1.4 3 3 3h32c1.7 0 3-1.3 3-3V3c0-1.7-1.4-3-3-3z"></path><path fill="#fff" d="M35 1c1.1 0 2 .9 2 2v18c0 1.1-.9 2-2 2H3c-1.1 0-2-.9-2-2V3c0-1.1.9-2 2-2h32"></path><path d="M28.3 10.1H28c-.4 1-.7 1.5-1 3h1.9c-.3-1.5-.3-2.2-.6-3zm2.9 5.9h-1.7c-.1 0-.1 0-.2-.1l-.2-.9-.1-.2h-2.4c-.1 0-.2 0-.2.2l-.3.9c0 .1-.1.1-.1.1h-2.1l.2-.5L27 8.7c0-.5.3-.7.8-.7h1.5c.1 0 .2 0 .2.2l1.4 6.5c.1.4.2.7.2 1.1.1.1.1.1.1.2zm-13.4-.3l.4-1.8c.1 0 .2.1.2.1.7.3 1.4.5 2.1.4.2 0 .5-.1.7-.2.5-.2.5-.7.1-1.1-.2-.2-.5-.3-.8-.5-.4-.2-.8-.4-1.1-.7-1.2-1-.8-2.4-.1-3.1.6-.4.9-.8 1.7-.8 1.2 0 2.5 0 3.1.2h.1c-.1.6-.2 1.1-.4 1.7-.5-.2-1-.4-1.5-.4-.3 0-.6 0-.9.1-.2 0-.3.1-.4.2-.2.2-.2.5 0 .7l.5.4c.4.2.8.4 1.1.6.5.3 1 .8 1.1 1.4.2.9-.1 1.7-.9 2.3-.5.4-.7.6-1.4.6-1.4 0-2.5.1-3.4-.2-.1.2-.1.2-.2.1zm-3.5.3c.1-.7.1-.7.2-1 .5-2.2 1-4.5 1.4-6.7.1-.2.1-.3.3-.3H18c-.2 1.2-.4 2.1-.7 3.2-.3 1.5-.6 3-1 4.5 0 .2-.1.2-.3.2M5 8.2c0-.1.2-.2.3-.2h3.4c.5 0 .9.3 1 .8l.9 4.4c0 .1 0 .1.1.2 0-.1.1-.1.1-.1l2.1-5.1c-.1-.1 0-.2.1-.2h2.1c0 .1 0 .1-.1.2l-3.1 7.3c-.1.2-.1.3-.2.4-.1.1-.3 0-.5 0H9.7c-.1 0-.2 0-.2-.2L7.9 9.5c-.2-.2-.5-.5-.9-.6-.6-.3-1.7-.5-1.9-.5L5 8.2z" fill="#142688"></path></svg></li>
            <li><svg xmlns="http://www.w3.org/2000/svg" role="img" viewBox="0 0 38 24" class="h-7 w-auto inline-block" aria-labelledby="pi-american_express" class="payment-icon"><title id="pi-american_express">American Express</title><g fill="none"><path fill="#000" d="M35,0 L3,0 C1.3,0 0,1.3 0,3 L0,21 C0,22.7 1.4,24 3,24 L35,24 C36.7,24 38,22.7 38,21 L38,3 C38,1.3 36.6,0 35,0 Z" opacity=".07"></path><path fill="#006FCF" d="M35,1 C36.1,1 37,1.9 37,3 L37,21 C37,22.1 36.1,23 35,23 L3,23 C1.9,23 1,22.1 1,21 L1,3 C1,1.9 1.9,1 3,1 L35,1"></path><path fill="#FFF" d="M8.971,10.268 L9.745,12.144 L8.203,12.144 L8.971,10.268 Z M25.046,10.346 L22.069,10.346 L22.069,11.173 L24.998,11.173 L24.998,12.412 L22.075,12.412 L22.075,13.334 L25.052,13.334 L25.052,14.073 L27.129,11.828 L25.052,9.488 L25.046,10.346 L25.046,10.346 Z M10.983,8.006 L14.978,8.006 L15.865,9.941 L16.687,8 L27.057,8 L28.135,9.19 L29.25,8 L34.013,8 L30.494,11.852 L33.977,15.68 L29.143,15.68 L28.065,14.49 L26.94,15.68 L10.03,15.68 L9.536,14.49 L8.406,14.49 L7.911,15.68 L4,15.68 L7.286,8 L10.716,8 L10.983,8.006 Z M19.646,9.084 L17.407,9.084 L15.907,12.62 L14.282,9.084 L12.06,9.084 L12.06,13.894 L10,9.084 L8.007,9.084 L5.625,14.596 L7.18,14.596 L7.674,13.406 L10.27,13.406 L10.764,14.596 L13.484,14.596 L13.484,10.661 L15.235,14.602 L16.425,14.602 L18.165,10.673 L18.165,14.603 L19.623,14.603 L19.647,9.083 L19.646,9.084 Z M28.986,11.852 L31.517,9.084 L29.695,9.084 L28.094,10.81 L26.546,9.084 L20.652,9.084 L20.652,14.602 L26.462,14.602 L28.076,12.864 L29.624,14.602 L31.499,14.602 L28.987,11.852 L28.986,11.852 Z"></path></g></svg></li>
        </ul>
    {% endif %}

    {% if gateway.handle == 'dummy' %}
        <p>
            This gateway should only be visible when
            <code class="font-semibold">CRAFT_DEV_MODE</code> is enabled:

            {{ craft.app.config.general.devMode
                ? tag( 'span', { class: 'text-green-700', html: svg('@appicons/thumbs-up.svg')|attr({class: 'inline h-5 w-5 fill-current'}) } )
                : tag( 'span', { class: 'text-red-800', html: svg('@appicons/thumbs-down.svg')|attr({class: 'inline h-5 w-5 fill-current'}) } )
            }}
        </p>
    {% endif %}

    {% if gateway.handle == 'purchaseOrder' %}
        <p>Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos</p>
    {% endif %}
{%- endmacro -%}


{%- macro currencies() -%}
    {%- set currencies = craft.commerce.paymentCurrencies.allPaymentCurrencies ??? [] %}
    {%- set balance = craft.commerce.carts.cart.outstandingBalance ??? 0 %}
    {% if currencies|length > 1 %}
        {% for currency in currencies %}
            {{ _self.mcui( 'radio', {
                name        : 'paymentCurrency',
                value       : currency.iso,
                label       : currency.name,
                checked     : ( currency.iso == craft.commerce.carts.cart.paymentCurrency ??? null ),
                instructions: balance|commerceCurrency(currency.iso,convert=true)
            }) }}
        {% endfor %}
    {% endif %}
{%- endmacro -%}


{%- macro textField(settings) -%}
    <div class="field flex flex-col @sm:flex-row gap-x-4">
        <label class="flex w-48 items-center">{{settings.label ??? null}} {% if settings.required ??? null %}<strong>*</strong>{% endif %}</label>
        {{ tag( 'input', {
            type        : settings.type  ??? 'text',
            name        : settings.name  ??? null,
            value       : settings.value ??? null,
            required    : settings.required ??? null,
            class       : 'w-full',
            placeholder : settings.placeholder ??? null,
        } ) }}
    </div>
{%- endmacro -%}


{%- macro regionField(settings) -%}
    {## Country ##}
    <input type="hidden" name="billingAddress[countryCode]" value="CA">

    {## Province / State ##}
    <div class="field flex flex-col @sm:flex-row gap-x-4">
        <label class="flex w-48 items-center">{{settings.label ??? null}} {% if settings.required ??? null %}<strong>*</strong>{% endif %}</label>
        <select name="{{settings.name ??? null}}" {% if settings.required ??? null %}required{% endif %} class="w-full">
            <option value=""> - Please Select -</option>
            {# <optgroup label="Canadian Provinces"> #}
                <option value="AB" {% if settings.value == 'AB' %}selected{% endif %}>Alberta</option>
                <option value="BC" {% if settings.value == 'BC' %}selected{% endif %}>British Columbia</option>
                <option value="MB" {% if settings.value == 'MB' %}selected{% endif %}>Manitoba</option>
                <option value="NB" {% if settings.value == 'NB' %}selected{% endif %}>New Brunswick</option>
                <option value="NF" {% if settings.value == 'NF' %}selected{% endif %}>Newfoundland</option>
                <option value="NT" {% if settings.value == 'NT' %}selected{% endif %}>Northwest Territories</option>
                <option value="NS" {% if settings.value == 'NS' %}selected{% endif %}>Nova Scotia</option>
                <option value="NU" {% if settings.value == 'NU' %}selected{% endif %}>Nunavut</option>
                <option value="ON" {% if settings.value == 'ON' %}selected{% endif %}>Ontario</option>
                <option value="PE" {% if settings.value == 'PE' %}selected{% endif %}>Prince Edward Island</option>
                <option value="QC" {% if settings.value == 'QC' %}selected{% endif %}>Quebec</option>
                <option value="SK" {% if settings.value == 'SK' %}selected{% endif %}>Saskatchewan</option>
                <option value="YT" {% if settings.value == 'YT' %}selected{% endif %}>Yukon Territory</option>
            {# </optgroup>

            <optgroup label="U.S. States/Territories">
                <option value="AK">Alaska</option>
                <option value="AL">Alabama</option>
                <option value="AR">Arkansas</option>
                <option value="AZ">Arizona</option>
                <option value="CA">California</option>
                <option value="CO">Colorado</option>
                <option value="CT">Connecticut</option>
                <option value="DC">District of Columbia</option>
                <option value="DE">Delaware</option>
                <option value="FL">Florida</option>
                <option value="GA">Georgia</option>
                <option value="HI">Hawaii</option>
                <option value="IA">Iowa</option>
                <option value="ID">Idaho</option>
                <option value="IL">Illinois</option>
                <option value="IN">Indiana</option>
                <option value="KS">Kansas</option>
                <option value="KY">Kentucky</option>
                <option value="LA">Louisiana</option>
                <option value="MA">Massachusetts</option>
                <option value="MD">Maryland</option>
                <option value="ME">Maine</option>
                <option value="MI">Michigan</option>
                <option value="MN">Minnesota</option>
                <option value="MO">Missouri</option>
                <option value="MS">Mississippi</option>
                <option value="MT">Montana</option>
                <option value="NC">North Carolina</option>
                <option value="ND">North Dakota</option>
                <option value="NE">Nebraska</option>
                <option value="NH">New Hampshire</option>
                <option value="NJ">New Jersey</option>
                <option value="NM">New Mexico</option>
                <option value="NV">Nevada</option>
                <option value="NY">New York</option>
                <option value="OH">Ohio</option>
                <option value="OK">Oklahoma</option>
                <option value="OR">Oregon</option>
                <option value="PA">Pennsylvania</option>
                <option value="PR">Puerto Rico</option>
                <option value="RI">Rhode Island</option>
                <option value="SC">South Carolina</option>
                <option value="SD">South Dakota</option>
                <option value="TN">Tennessee</option>
                <option value="TX">Texas</option>
                <option value="UT">Utah</option>
                <option value="VA">Virginia</option>
                <option value="VT">Vermont</option>
                <option value="WA">Washington</option>
                <option value="WI">Wisconsin</option>
                <option value="WV">West Virginia</option>
                <option value="WY">Wyoming</option>
            </optgroup> #}
        </select>
    </div>
{%- endmacro -%}


{%- macro mcui( type, params ) -%}
    {%- set type = type ??? 'checkbox' %}
    {%- set type = type in ['radio', 'checkbox'] ? type : 'checkbox' %}

    {%- set params = {
        id: "mcui#{random()}",
        name: null,
        label: null,
        value: 1,
        checked: false,
        activate: null,
        instructions: null,
    } | merge(params) -%}

    {% if params.name and params.label %}
        <label
            x-data="{}"
            class="mcui-{{type}} cursor-pointer flex gap-5 p-4"
            for="{{params.id}}"

            {% if params.activate %}
                @click.prevent="{{params.activate}}"
                @keydown.enter.prevent="{{params.activate}}"
                @keydown.space.prevent="{{params.activate}}"
            {% endif %}
        >
            {{ input( type, params.name, params.value, {
                id: params.id,
                checked: params.checked
            }) }}

            <div class="mt-0.5 h-6 w-6 aspect-square rounded-full border-2 border-gray-400">
                {% if 'checkbox' == type %}
                    <svg class="mcui-check" viewBox="-2 -2 35 35" aria-hidden="true"><polyline points="7.57 15.87 12.62 21.07 23.43 9.93" /></svg>
                {% endif %}
            </div>

            <div class="flex flex-col gap-1 sm:min-w-80 max-w-80 flex-grow">
                <strong class="text-2xl">{{ params.label }}</strong>
                {{ params.instructions ??? null }}
            </div>
        </label>
    {% endif %}
{%- endmacro -%}


{%- macro form_login( params ) -%}
    <form method="post" accept-charset="utf-8">
        {{ csrfInput() }}
        {{ actionInput('users/login') }}
        {{ redirectInput( params.redirect ??? siteUrl('account') ) }}

        {% if params.errorMessage ??? params.errorCode ??? null %}
            <span class="text-red-500">{{ params.errorMessage ??? params.errorCode }}</span>
        {% endif %}

        <section class="flex flex-col @2xl:flex-row gap-x-6 gap-y-4 relative">
            <div class="flex flex-col @2xl:flex-row gap-x-6 gap-y-4 w-full">
                <div class="flex flex-col gap-1 flex-grow">
                    <label for="loginName" class="font-semibold">{{ 'Email Address'|t }}</label>
                    {%- set username = params.username ??? craft.app.user.getRememberedUsername() -%}
                    {{ input('text', 'loginName', username, {
                        id: 'loginName',
                        placeholder: 'email@site.com',
                        required: true,
                    }) }}
                </div>

                <div class="flex flex-col gap-1">
                    <label for="loginPassword" class="font-semibold">{{- 'Password'|t -}}</label>
                    {{ input('password', 'password', null, { id: 'loginPassword', }) }}
                </div>
            </div>

            <div class="@2xl:self-end">
                <button class="button">{{ 'Login âžœ'|t }}</button>
            </div>
        </section>

        <div class="pt-4 flex flex-wrap gap-x-20 gap-y-3 justify-between">
            <label for="rememberMe">
                {{ input('checkbox', 'rememberMe', 1, { id: 'rememberMe', checked: true }) }}
                {{ 'Remember me'|t }}
            </label>

            <a class="font-semibold" href="{{ siteUrl('account/forgot') }}">{{- 'â†º Reset your password'|t -}}</a>
        </div>
    </form>
{%- endmacro -%}


{%- macro form_forgot( params ) -%}
    {%- set redirect = params.redirect ??? siteUrl('account/login') -%}
    <form method="post" accept-charset="utf-8" class="flex flex-col gap-8">
        {{ csrfInput() }}
        {{ actionInput('users/send-password-reset-email') }}
        {{ successMessageInput('Password reset email sent!') }}
        {{ redirectInput(redirect) }}

        {% if params.errorMessage ??? params.errorCode ??? null %}
            <span class="text-red-500">{{ params.errorMessage ??? params.errorCode }}</span>
        {% endif %}

        <div class="field flex flex-col gap-1">
            <label for="loginName">{{- 'Email Address'|t -}}</label>
            {{ input('text', 'loginName', loginName ?? craft.app.user.rememberedUsername, {
                id: 'loginName'
            }) }}
        </div>

        <p class="data-only-links flex gap-6 items-center">
            {{ tag('button', { type: 'submit', class: "button" , text: 'Reset Password'|t }) }}
            <a href="{{ url('account') }}">{{- 'Cancel'|t -}}</a>
        </p>
    </form>
{%- endmacro -%}